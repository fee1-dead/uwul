; ModuleID = 'main'
source_filename = "main"

@global = private unnamed_addr constant [2 x i8] c"e\00", align 1
@fmt_I32 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt_String = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@global.2 = private unnamed_addr constant [2 x i8] c"3\00", align 1

define void @__entrypoint_actual() {
entry:
  %_0 = alloca i32, align 4
  %_1 = alloca i32, align 4
  %_2 = alloca i8*, align 8
  %_3 = alloca i32, align 4
  br label %bb0

bb0:                                              ; preds = %entry
  store i32 1, i32* %_0, align 4
  %0 = load i32, i32* %_0, align 4
  %1 = mul i32 123, %0
  store i32 %1, i32* %_1, align 4
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global, i32 0, i32 0), i8** %_2, align 8
  %2 = load i32, i32* %_0, align 4
  store i32 %2, i32* %_3, align 4
  %3 = load i32, i32* %_1, align 4
  %4 = sub i32 0, %3
  store i32 %4, i32* %_3, align 4
  %5 = load i32, i32* %_3, align 4
  call void @println(i32 %5)
  br label %bb1

bb1:                                              ; preds = %bb0
  call void @println.1(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global.2, i32 0, i32 0))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

define void @println(i32 %0) {
entry:
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt_I32, i32 0, i32 0), i32 %0)
  ret void
}

declare void @printf(i8* %0, ...)

define void @println.1(i8* %0) {
entry:
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt_String, i32 0, i32 0), i8* %0)
  ret void
}

define i32 @main(i32 %0, i8** %1) {
start:
  call void @__entrypoint_actual()
  ret i32 0
}
